[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "uml-mcp"
version = "1.2.0"
description = "UML diagram generation server with MCP interface"
authors = [{ name = "Sergey Chistokhin", email = "s.chistokhin@example.com" }]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.10"
keywords = ["uml", "mcp", "diagram", "plantuml", "mermaid", "d2", "graphviz"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    # Core dependencies
    "fastapi>=0.104.1",
    "uvicorn>=0.24.0",
    "typer>=0.9.0",
    "rich>=13.6.0",
    "httpx>=0.24.1",
    "pydantic>=2.4.2",
    "python-multipart>=0.0.9",
    "python-dotenv>=1.0.0",
    "starlette>=0.27.0",

    # Diagram libraries
    "graphviz>=0.20.1",

    # Additional utilities
    "pillow>=10.1.0",
    "jinja2>=3.1.2",
    "aiofiles>=23.2.1",
    "pytest>=7.4.3",

    "mcp>=1.2.0",
    "requests>=2.28.0",
    "python-dateutil>=2.8.2",
    "fastmcp>=0.4.0",

    # Platform-specific: uvloop for Linux/Mac only (better async performance)
    "uvloop>=0.17.0; sys_platform != 'win32'",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.2",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.1",
    "pre-commit>=3.4.0",
    "black>=23.9.1",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.5.1",
    "sphinx>=5.0.0",
]

[project.urls]
Homepage = "https://github.com/ChistokhinSV/uml-mcp"
Repository = "https://github.com/ChistokhinSV/uml-mcp"
Documentation = "https://github.com/ChistokhinSV/uml-mcp/blob/main/README.md"
Issues = "https://github.com/ChistokhinSV/uml-mcp/issues"

[project.scripts]
uml-mcp = "mcp_server:main"

[tool.hatch.build.targets.wheel]
packages = ["mcp_core", "kroki", "mermaid", "plantuml_local", "D2", "ai_uml"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"
addopts = "--cov=mcp_core --cov-report=term --cov-report=html"

[tool.black]
line-length = 88
target-version = ["py310"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.coverage.run]
source = ["mcp_core"]
omit = ["tests/*", "*/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = ["E", "F", "I"]
ignore = ["E501"]
